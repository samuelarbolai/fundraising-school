Paste any context you want Codex to read below this line.

## Working Context (2025-10-30)

### Project Scope
- Primary target is **fundraisingschool.com**; we also reference 30x.org for brand alignment but we are not redesigning it.
- We operate as a coding/design teammate, prioritizing fast iteration on Next.js (app directory) with Supabase auth + Drizzle ORM.
- We must always produce a plan for non‑trivial work, run code through `npm run build` (and `npm run dev` for manual checks when possible), and test DOM changes with Chrome DevTools MCP when asked.

### Core Features Delivered
1. **Homepage enhancements**
   - Hero remains top section; immediately after comes the “Tools for founders” section with three cards:
     - Sales Coach agent → opens FriendlyVcChatModal with `agentSlug="sales-coach"`.
     - Friendly VC Analyst agent → opens FriendlyVcChatModal with `agentSlug="friendly-vc-analyst"`.
     - LATAM lead sourcing hub → opens existing modal.
   - A small glassmorphic “Corporate innovation?” floating badge links directly to https://30x.org. The previous large cross-program section is removed.

2. **Friendly VC Analyst evaluation pipeline**
   - `drizzle/20250216_agents.sql` seeds `agents` table and adds `agent_outputs` table.
   - `drizzle/20250216_agent_outputs_extension.sql` (new) adds columns: `company_name`, `founder_name`, `founder_email`, `founder_phone`, `connectors`.
   - `app/lib/friendlyVc/evaluatorPrompt.js` & `evaluator.js` define the summarizer prompt and helper.
   - `app/lib/friendlyVc/openaiClient.js` exposes `chatCompletion` helper (non-stream).
   - `app/api/friendly-vc/messages/route.js` now:
     - Loads prompts per agent.
     - After streaming analyst reply, builds full transcript, calls evaluator, parses JSON, stores structured data via `recordAgentOutput` (updated signature in `service.js`).
     - Logs evaluation success/error via `logAiEvent`.

3. **Agent outputs management**
   - New API routes: `/api/agent-outputs` (list + CSV export) and `/api/agent-outputs/[outputId]` (PATCH for manual edits, POST for regeneration).
   - List endpoint requires Supabase auth (`requireAuthUser`).
   - Regeneration re-runs evaluator with optional instructions, updates row, logs event.

4. **Analyst dashboard**
   - New page `app/table/page.js` (“Friendly VC Analyst Table”).
   - Left sidebar: description, CSV export button, textarea + button to regenerate summary with extra instructions.
   - Main table (clay style): columns for Company, Founder, Contact, Fit, Potential connectors, Summary, Actions. Cells support inline edits (stored in local drafts until “Save”). Selected row highlighted.
   - Uses new API endpoints; includes `handleRebuild`, `handleSave`, `handleExport` helpers.
   - Styling appended to `app/globals.css` (clay table, sidebar, floating badge adjustments).

5. **Friendly VC prompts**
   - Fallback prompt for analyst updated to gather required data (company, founder contact, connectors).
   - Sales coach prompt unchanged.

### Outstanding Tasks / Notes for future sessions
- Run `npm run db:push` to apply new migrations before using admin/table.
- If old analyst data exists, truncate tables or reseed prompts accordingly.
- New evaluator prompt expects JSON; ensure OpenAI responses conform to schema. Errors log via ai_events.
- `/api/agent-outputs` returns dynamic-server warning during static build (expected; route relies on cookies/Auth).
- Chrome DevTools MCP can’t access local `localhost` services from sandbox; remind user to run tests locally when direct access fails.

### Coding Guidelines / UX Notes
- Always keep agent cards opening modals (do not revert to admin link).
- Floating corporate badge must remain small, unobtrusive, glassmorphic.
- When updating prompts or schema, bump version identifiers and ensure migrations exist.
- Respect instructions: create plans, run `npm run build`, use Chrome DevTools MCP to inspect DOM when user requests.

This context should be maintained for future Codex sessions so work continues seamlessly.
